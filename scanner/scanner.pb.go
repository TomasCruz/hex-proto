// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scanner/scanner.proto

package scanner

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RangeMsg struct {
	Start                int32    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  int32    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeMsg) Reset()         { *m = RangeMsg{} }
func (m *RangeMsg) String() string { return proto.CompactTextString(m) }
func (*RangeMsg) ProtoMessage()    {}
func (*RangeMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c85bb07bffd332d8, []int{0}
}

func (m *RangeMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeMsg.Unmarshal(m, b)
}
func (m *RangeMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeMsg.Marshal(b, m, deterministic)
}
func (m *RangeMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeMsg.Merge(m, src)
}
func (m *RangeMsg) XXX_Size() int {
	return xxx_messageInfo_RangeMsg.Size(m)
}
func (m *RangeMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeMsg.DiscardUnknown(m)
}

var xxx_messageInfo_RangeMsg proto.InternalMessageInfo

func (m *RangeMsg) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *RangeMsg) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

type HexMsg struct {
	HexID                int32    `protobuf:"varint,1,opt,name=hexID,proto3" json:"hexID,omitempty"`
	Para                 bool     `protobuf:"varint,2,opt,name=para,proto3" json:"para,omitempty"`
	Txt                  string   `protobuf:"bytes,3,opt,name=txt,proto3" json:"txt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HexMsg) Reset()         { *m = HexMsg{} }
func (m *HexMsg) String() string { return proto.CompactTextString(m) }
func (*HexMsg) ProtoMessage()    {}
func (*HexMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c85bb07bffd332d8, []int{1}
}

func (m *HexMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HexMsg.Unmarshal(m, b)
}
func (m *HexMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HexMsg.Marshal(b, m, deterministic)
}
func (m *HexMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HexMsg.Merge(m, src)
}
func (m *HexMsg) XXX_Size() int {
	return xxx_messageInfo_HexMsg.Size(m)
}
func (m *HexMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_HexMsg.DiscardUnknown(m)
}

var xxx_messageInfo_HexMsg proto.InternalMessageInfo

func (m *HexMsg) GetHexID() int32 {
	if m != nil {
		return m.HexID
	}
	return 0
}

func (m *HexMsg) GetPara() bool {
	if m != nil {
		return m.Para
	}
	return false
}

func (m *HexMsg) GetTxt() string {
	if m != nil {
		return m.Txt
	}
	return ""
}

type ArrHexMsg struct {
	Hexes                []*HexMsg `protobuf:"bytes,1,rep,name=hexes,proto3" json:"hexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ArrHexMsg) Reset()         { *m = ArrHexMsg{} }
func (m *ArrHexMsg) String() string { return proto.CompactTextString(m) }
func (*ArrHexMsg) ProtoMessage()    {}
func (*ArrHexMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c85bb07bffd332d8, []int{2}
}

func (m *ArrHexMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrHexMsg.Unmarshal(m, b)
}
func (m *ArrHexMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrHexMsg.Marshal(b, m, deterministic)
}
func (m *ArrHexMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrHexMsg.Merge(m, src)
}
func (m *ArrHexMsg) XXX_Size() int {
	return xxx_messageInfo_ArrHexMsg.Size(m)
}
func (m *ArrHexMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrHexMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ArrHexMsg proto.InternalMessageInfo

func (m *ArrHexMsg) GetHexes() []*HexMsg {
	if m != nil {
		return m.Hexes
	}
	return nil
}

type HexWordMsg struct {
	HexID                int32    `protobuf:"varint,1,opt,name=hexID,proto3" json:"hexID,omitempty"`
	Order                int32    `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	WordID               int32    `protobuf:"varint,3,opt,name=wordID,proto3" json:"wordID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HexWordMsg) Reset()         { *m = HexWordMsg{} }
func (m *HexWordMsg) String() string { return proto.CompactTextString(m) }
func (*HexWordMsg) ProtoMessage()    {}
func (*HexWordMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c85bb07bffd332d8, []int{3}
}

func (m *HexWordMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HexWordMsg.Unmarshal(m, b)
}
func (m *HexWordMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HexWordMsg.Marshal(b, m, deterministic)
}
func (m *HexWordMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HexWordMsg.Merge(m, src)
}
func (m *HexWordMsg) XXX_Size() int {
	return xxx_messageInfo_HexWordMsg.Size(m)
}
func (m *HexWordMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_HexWordMsg.DiscardUnknown(m)
}

var xxx_messageInfo_HexWordMsg proto.InternalMessageInfo

func (m *HexWordMsg) GetHexID() int32 {
	if m != nil {
		return m.HexID
	}
	return 0
}

func (m *HexWordMsg) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *HexWordMsg) GetWordID() int32 {
	if m != nil {
		return m.WordID
	}
	return 0
}

type WordMsg struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Txt                  string   `protobuf:"bytes,2,opt,name=txt,proto3" json:"txt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WordMsg) Reset()         { *m = WordMsg{} }
func (m *WordMsg) String() string { return proto.CompactTextString(m) }
func (*WordMsg) ProtoMessage()    {}
func (*WordMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c85bb07bffd332d8, []int{4}
}

func (m *WordMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordMsg.Unmarshal(m, b)
}
func (m *WordMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordMsg.Marshal(b, m, deterministic)
}
func (m *WordMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordMsg.Merge(m, src)
}
func (m *WordMsg) XXX_Size() int {
	return xxx_messageInfo_WordMsg.Size(m)
}
func (m *WordMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_WordMsg.DiscardUnknown(m)
}

var xxx_messageInfo_WordMsg proto.InternalMessageInfo

func (m *WordMsg) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WordMsg) GetTxt() string {
	if m != nil {
		return m.Txt
	}
	return ""
}

type ArrTranslatableMsg struct {
	Words                []*WordMsg    `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	Hexes                []*HexMsg     `protobuf:"bytes,2,rep,name=hexes,proto3" json:"hexes,omitempty"`
	HexWords             []*HexWordMsg `protobuf:"bytes,3,rep,name=hexWords,proto3" json:"hexWords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ArrTranslatableMsg) Reset()         { *m = ArrTranslatableMsg{} }
func (m *ArrTranslatableMsg) String() string { return proto.CompactTextString(m) }
func (*ArrTranslatableMsg) ProtoMessage()    {}
func (*ArrTranslatableMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c85bb07bffd332d8, []int{5}
}

func (m *ArrTranslatableMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrTranslatableMsg.Unmarshal(m, b)
}
func (m *ArrTranslatableMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrTranslatableMsg.Marshal(b, m, deterministic)
}
func (m *ArrTranslatableMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrTranslatableMsg.Merge(m, src)
}
func (m *ArrTranslatableMsg) XXX_Size() int {
	return xxx_messageInfo_ArrTranslatableMsg.Size(m)
}
func (m *ArrTranslatableMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrTranslatableMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ArrTranslatableMsg proto.InternalMessageInfo

func (m *ArrTranslatableMsg) GetWords() []*WordMsg {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *ArrTranslatableMsg) GetHexes() []*HexMsg {
	if m != nil {
		return m.Hexes
	}
	return nil
}

func (m *ArrTranslatableMsg) GetHexWords() []*HexWordMsg {
	if m != nil {
		return m.HexWords
	}
	return nil
}

type ScannedMsg struct {
	HexID                int32    `protobuf:"varint,1,opt,name=hexID,proto3" json:"hexID,omitempty"`
	Scanned              string   `protobuf:"bytes,2,opt,name=scanned,proto3" json:"scanned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScannedMsg) Reset()         { *m = ScannedMsg{} }
func (m *ScannedMsg) String() string { return proto.CompactTextString(m) }
func (*ScannedMsg) ProtoMessage()    {}
func (*ScannedMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c85bb07bffd332d8, []int{6}
}

func (m *ScannedMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScannedMsg.Unmarshal(m, b)
}
func (m *ScannedMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScannedMsg.Marshal(b, m, deterministic)
}
func (m *ScannedMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScannedMsg.Merge(m, src)
}
func (m *ScannedMsg) XXX_Size() int {
	return xxx_messageInfo_ScannedMsg.Size(m)
}
func (m *ScannedMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ScannedMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ScannedMsg proto.InternalMessageInfo

func (m *ScannedMsg) GetHexID() int32 {
	if m != nil {
		return m.HexID
	}
	return 0
}

func (m *ScannedMsg) GetScanned() string {
	if m != nil {
		return m.Scanned
	}
	return ""
}

type ArrScannedMsg struct {
	Hexes                []*ScannedMsg `protobuf:"bytes,1,rep,name=hexes,proto3" json:"hexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ArrScannedMsg) Reset()         { *m = ArrScannedMsg{} }
func (m *ArrScannedMsg) String() string { return proto.CompactTextString(m) }
func (*ArrScannedMsg) ProtoMessage()    {}
func (*ArrScannedMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c85bb07bffd332d8, []int{7}
}

func (m *ArrScannedMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrScannedMsg.Unmarshal(m, b)
}
func (m *ArrScannedMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrScannedMsg.Marshal(b, m, deterministic)
}
func (m *ArrScannedMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrScannedMsg.Merge(m, src)
}
func (m *ArrScannedMsg) XXX_Size() int {
	return xxx_messageInfo_ArrScannedMsg.Size(m)
}
func (m *ArrScannedMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrScannedMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ArrScannedMsg proto.InternalMessageInfo

func (m *ArrScannedMsg) GetHexes() []*ScannedMsg {
	if m != nil {
		return m.Hexes
	}
	return nil
}

func init() {
	proto.RegisterType((*RangeMsg)(nil), "scanner.RangeMsg")
	proto.RegisterType((*HexMsg)(nil), "scanner.HexMsg")
	proto.RegisterType((*ArrHexMsg)(nil), "scanner.ArrHexMsg")
	proto.RegisterType((*HexWordMsg)(nil), "scanner.HexWordMsg")
	proto.RegisterType((*WordMsg)(nil), "scanner.WordMsg")
	proto.RegisterType((*ArrTranslatableMsg)(nil), "scanner.ArrTranslatableMsg")
	proto.RegisterType((*ScannedMsg)(nil), "scanner.ScannedMsg")
	proto.RegisterType((*ArrScannedMsg)(nil), "scanner.ArrScannedMsg")
}

func init() { proto.RegisterFile("scanner/scanner.proto", fileDescriptor_c85bb07bffd332d8) }

var fileDescriptor_c85bb07bffd332d8 = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x5b, 0x4b, 0xe3, 0x40,
	0x14, 0x6e, 0x92, 0x4d, 0x2f, 0x67, 0x6f, 0xdd, 0xd9, 0x6e, 0x09, 0xed, 0x4b, 0x19, 0xd8, 0xa5,
	0x8b, 0x90, 0x48, 0x04, 0x1f, 0xc4, 0x97, 0x42, 0x0b, 0xed, 0x83, 0x20, 0x51, 0xf0, 0x79, 0xea,
	0x8c, 0x69, 0xa1, 0x26, 0xe5, 0x24, 0x62, 0xfc, 0x1f, 0xfe, 0x1a, 0x7f, 0x9d, 0x64, 0x2e, 0x49,
	0x14, 0xed, 0x53, 0xe6, 0x5c, 0xbe, 0xef, 0x7c, 0xdf, 0xc9, 0x81, 0x3f, 0xd9, 0x2d, 0x4b, 0x12,
	0x81, 0x81, 0xfe, 0xfa, 0x7b, 0x4c, 0xf3, 0x94, 0x74, 0x74, 0x38, 0x1a, 0xc7, 0x69, 0x1a, 0xef,
	0x44, 0x20, 0xd3, 0xeb, 0x87, 0xbb, 0x40, 0xdc, 0xef, 0xf3, 0x27, 0xd5, 0x45, 0x43, 0xe8, 0x46,
	0x2c, 0x89, 0xc5, 0x45, 0x16, 0x93, 0x01, 0xb8, 0x59, 0xce, 0x30, 0xf7, 0xac, 0x89, 0x35, 0x75,
	0x23, 0x15, 0x90, 0x3e, 0x38, 0x22, 0xe1, 0x9e, 0x2d, 0x73, 0xe5, 0x93, 0xce, 0xa1, 0xbd, 0x14,
	0x85, 0x46, 0x6c, 0x44, 0xb1, 0x9a, 0x1b, 0x84, 0x0c, 0x08, 0x81, 0x2f, 0x7b, 0x86, 0x4c, 0x42,
	0xba, 0x91, 0x7c, 0x97, 0x2c, 0x79, 0x91, 0x7b, 0xce, 0xc4, 0x9a, 0xf6, 0xa2, 0xf2, 0x49, 0x43,
	0xe8, 0xcd, 0x10, 0x35, 0xd1, 0x5f, 0x49, 0x24, 0x32, 0xcf, 0x9a, 0x38, 0xd3, 0xaf, 0xe1, 0x4f,
	0xdf, 0x78, 0x51, 0xf5, 0x48, 0x55, 0xe9, 0x25, 0xc0, 0x52, 0x14, 0x37, 0x29, 0xf2, 0xcf, 0xa7,
	0x0f, 0xc0, 0x4d, 0x91, 0x0b, 0xd4, 0x8a, 0x55, 0x40, 0x86, 0xd0, 0x7e, 0x4c, 0x91, 0xaf, 0xe6,
	0x52, 0x82, 0x1b, 0xe9, 0x88, 0x1e, 0x41, 0xc7, 0xd0, 0xfd, 0x00, 0x7b, 0xcb, 0x35, 0x97, 0xbd,
	0xe5, 0x46, 0xb2, 0x5d, 0x4b, 0x7e, 0xb6, 0x80, 0xcc, 0x10, 0xaf, 0x91, 0x25, 0xd9, 0x8e, 0xe5,
	0x6c, 0xbd, 0x93, 0x7b, 0xfb, 0x07, 0x6e, 0xc9, 0x66, 0xc4, 0xf7, 0x2b, 0xf1, 0x9a, 0x39, 0x52,
	0xe5, 0xda, 0xa4, 0x7d, 0xc8, 0x24, 0x09, 0xa0, 0xbb, 0x51, 0x26, 0x33, 0xcf, 0x91, 0x9d, 0xbf,
	0x9b, 0x9d, 0x86, 0xb4, 0x6a, 0xa2, 0xe7, 0x00, 0x57, 0xb2, 0x7e, 0x60, 0x2b, 0x1e, 0xe8, 0x7b,
	0xe0, 0xda, 0x90, 0x09, 0xe9, 0x19, 0x7c, 0x9f, 0x21, 0x36, 0x08, 0xfe, 0xbf, 0xfd, 0x17, 0xf5,
	0xf0, 0xba, 0x47, 0x4b, 0x0d, 0x5f, 0x2c, 0xe8, 0xa8, 0x2c, 0x92, 0x63, 0x70, 0x97, 0x52, 0xff,
	0xaf, 0x0a, 0x60, 0x2e, 0x6b, 0x44, 0xaa, 0x54, 0xf5, 0xcb, 0x69, 0x8b, 0x2c, 0xe0, 0x5b, 0x73,
	0x95, 0x64, 0xe8, 0xab, 0x4b, 0xf5, 0xcd, 0xa5, 0xfa, 0x8b, 0xf2, 0x52, 0x47, 0xe3, 0x26, 0xfa,
	0xdd, 0xf2, 0x69, 0x8b, 0x9c, 0x1a, 0x0d, 0xfc, 0xa3, 0xd1, 0xc3, 0x26, 0xb8, 0x76, 0x40, 0x5b,
	0xeb, 0xb6, 0x1c, 0x73, 0xf2, 0x1a, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x52, 0xea, 0x45, 0x40, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScannerClient is the client API for Scanner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScannerClient interface {
	Hexes(ctx context.Context, in *RangeMsg, opts ...grpc.CallOption) (*ArrHexMsg, error)
	Translatable(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ArrTranslatableMsg, error)
	Scanned(ctx context.Context, in *RangeMsg, opts ...grpc.CallOption) (*ArrScannedMsg, error)
}

type scannerClient struct {
	cc *grpc.ClientConn
}

func NewScannerClient(cc *grpc.ClientConn) ScannerClient {
	return &scannerClient{cc}
}

func (c *scannerClient) Hexes(ctx context.Context, in *RangeMsg, opts ...grpc.CallOption) (*ArrHexMsg, error) {
	out := new(ArrHexMsg)
	err := c.cc.Invoke(ctx, "/scanner.Scanner/Hexes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scannerClient) Translatable(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ArrTranslatableMsg, error) {
	out := new(ArrTranslatableMsg)
	err := c.cc.Invoke(ctx, "/scanner.Scanner/Translatable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scannerClient) Scanned(ctx context.Context, in *RangeMsg, opts ...grpc.CallOption) (*ArrScannedMsg, error) {
	out := new(ArrScannedMsg)
	err := c.cc.Invoke(ctx, "/scanner.Scanner/Scanned", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScannerServer is the server API for Scanner service.
type ScannerServer interface {
	Hexes(context.Context, *RangeMsg) (*ArrHexMsg, error)
	Translatable(context.Context, *empty.Empty) (*ArrTranslatableMsg, error)
	Scanned(context.Context, *RangeMsg) (*ArrScannedMsg, error)
}

// UnimplementedScannerServer can be embedded to have forward compatible implementations.
type UnimplementedScannerServer struct {
}

func (*UnimplementedScannerServer) Hexes(ctx context.Context, req *RangeMsg) (*ArrHexMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hexes not implemented")
}
func (*UnimplementedScannerServer) Translatable(ctx context.Context, req *empty.Empty) (*ArrTranslatableMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Translatable not implemented")
}
func (*UnimplementedScannerServer) Scanned(ctx context.Context, req *RangeMsg) (*ArrScannedMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Scanned not implemented")
}

func RegisterScannerServer(s *grpc.Server, srv ScannerServer) {
	s.RegisterService(&_Scanner_serviceDesc, srv)
}

func _Scanner_Hexes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RangeMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScannerServer).Hexes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scanner.Scanner/Hexes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScannerServer).Hexes(ctx, req.(*RangeMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scanner_Translatable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScannerServer).Translatable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scanner.Scanner/Translatable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScannerServer).Translatable(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scanner_Scanned_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RangeMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScannerServer).Scanned(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scanner.Scanner/Scanned",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScannerServer).Scanned(ctx, req.(*RangeMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scanner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scanner.Scanner",
	HandlerType: (*ScannerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hexes",
			Handler:    _Scanner_Hexes_Handler,
		},
		{
			MethodName: "Translatable",
			Handler:    _Scanner_Translatable_Handler,
		},
		{
			MethodName: "Scanned",
			Handler:    _Scanner_Scanned_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scanner/scanner.proto",
}
