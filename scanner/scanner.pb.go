// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: scanner/scanner.proto

package scanner

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RangeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *RangeMsg) Reset() {
	*x = RangeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeMsg) ProtoMessage() {}

func (x *RangeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeMsg.ProtoReflect.Descriptor instead.
func (*RangeMsg) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{0}
}

func (x *RangeMsg) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *RangeMsg) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type HexMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HexID int64  `protobuf:"varint,1,opt,name=hexID,proto3" json:"hexID,omitempty"`
	Para  bool   `protobuf:"varint,2,opt,name=para,proto3" json:"para,omitempty"`
	Txt   string `protobuf:"bytes,3,opt,name=txt,proto3" json:"txt,omitempty"`
}

func (x *HexMsg) Reset() {
	*x = HexMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HexMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HexMsg) ProtoMessage() {}

func (x *HexMsg) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HexMsg.ProtoReflect.Descriptor instead.
func (*HexMsg) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{1}
}

func (x *HexMsg) GetHexID() int64 {
	if x != nil {
		return x.HexID
	}
	return 0
}

func (x *HexMsg) GetPara() bool {
	if x != nil {
		return x.Para
	}
	return false
}

func (x *HexMsg) GetTxt() string {
	if x != nil {
		return x.Txt
	}
	return ""
}

type ArrHexMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hexes []*HexMsg `protobuf:"bytes,1,rep,name=hexes,proto3" json:"hexes,omitempty"`
}

func (x *ArrHexMsg) Reset() {
	*x = ArrHexMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrHexMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrHexMsg) ProtoMessage() {}

func (x *ArrHexMsg) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrHexMsg.ProtoReflect.Descriptor instead.
func (*ArrHexMsg) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{2}
}

func (x *ArrHexMsg) GetHexes() []*HexMsg {
	if x != nil {
		return x.Hexes
	}
	return nil
}

type HexWordMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HexID  int64 `protobuf:"varint,1,opt,name=hexID,proto3" json:"hexID,omitempty"`
	Order  int64 `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	WordID int64 `protobuf:"varint,3,opt,name=wordID,proto3" json:"wordID,omitempty"`
}

func (x *HexWordMsg) Reset() {
	*x = HexWordMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HexWordMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HexWordMsg) ProtoMessage() {}

func (x *HexWordMsg) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HexWordMsg.ProtoReflect.Descriptor instead.
func (*HexWordMsg) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{3}
}

func (x *HexWordMsg) GetHexID() int64 {
	if x != nil {
		return x.HexID
	}
	return 0
}

func (x *HexWordMsg) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *HexWordMsg) GetWordID() int64 {
	if x != nil {
		return x.WordID
	}
	return 0
}

type WordMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Txt string `protobuf:"bytes,2,opt,name=txt,proto3" json:"txt,omitempty"`
}

func (x *WordMsg) Reset() {
	*x = WordMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordMsg) ProtoMessage() {}

func (x *WordMsg) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordMsg.ProtoReflect.Descriptor instead.
func (*WordMsg) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{4}
}

func (x *WordMsg) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WordMsg) GetTxt() string {
	if x != nil {
		return x.Txt
	}
	return ""
}

type ArrTranslatableMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words    []*WordMsg    `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	Hexes    []*HexMsg     `protobuf:"bytes,2,rep,name=hexes,proto3" json:"hexes,omitempty"`
	HexWords []*HexWordMsg `protobuf:"bytes,3,rep,name=hexWords,proto3" json:"hexWords,omitempty"`
}

func (x *ArrTranslatableMsg) Reset() {
	*x = ArrTranslatableMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrTranslatableMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrTranslatableMsg) ProtoMessage() {}

func (x *ArrTranslatableMsg) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrTranslatableMsg.ProtoReflect.Descriptor instead.
func (*ArrTranslatableMsg) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{5}
}

func (x *ArrTranslatableMsg) GetWords() []*WordMsg {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *ArrTranslatableMsg) GetHexes() []*HexMsg {
	if x != nil {
		return x.Hexes
	}
	return nil
}

func (x *ArrTranslatableMsg) GetHexWords() []*HexWordMsg {
	if x != nil {
		return x.HexWords
	}
	return nil
}

type ScannedMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HexID           int64    `protobuf:"varint,1,opt,name=hexID,proto3" json:"hexID,omitempty"`
	Para            bool     `protobuf:"varint,2,opt,name=para,proto3" json:"para,omitempty"`
	Txt             string   `protobuf:"bytes,3,opt,name=txt,proto3" json:"txt,omitempty"`
	Scanned         string   `protobuf:"bytes,4,opt,name=scanned,proto3" json:"scanned,omitempty"`
	MusicalTemplate string   `protobuf:"bytes,5,opt,name=musicalTemplate,proto3" json:"musicalTemplate,omitempty"`
	ChangeCount     int64    `protobuf:"varint,6,opt,name=changeCount,proto3" json:"changeCount,omitempty"`
	ScanningVariety int64    `protobuf:"varint,7,opt,name=scanningVariety,proto3" json:"scanningVariety,omitempty"`
	Selected        bool     `protobuf:"varint,8,opt,name=selected,proto3" json:"selected,omitempty"`
	MainCaesura     int64    `protobuf:"varint,9,opt,name=mainCaesura,proto3" json:"mainCaesura,omitempty"`
	Caesurae        []int64  `protobuf:"varint,10,rep,packed,name=caesurae,proto3" json:"caesurae,omitempty"`
	Words           []string `protobuf:"bytes,11,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *ScannedMsg) Reset() {
	*x = ScannedMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannedMsg) ProtoMessage() {}

func (x *ScannedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannedMsg.ProtoReflect.Descriptor instead.
func (*ScannedMsg) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{6}
}

func (x *ScannedMsg) GetHexID() int64 {
	if x != nil {
		return x.HexID
	}
	return 0
}

func (x *ScannedMsg) GetPara() bool {
	if x != nil {
		return x.Para
	}
	return false
}

func (x *ScannedMsg) GetTxt() string {
	if x != nil {
		return x.Txt
	}
	return ""
}

func (x *ScannedMsg) GetScanned() string {
	if x != nil {
		return x.Scanned
	}
	return ""
}

func (x *ScannedMsg) GetMusicalTemplate() string {
	if x != nil {
		return x.MusicalTemplate
	}
	return ""
}

func (x *ScannedMsg) GetChangeCount() int64 {
	if x != nil {
		return x.ChangeCount
	}
	return 0
}

func (x *ScannedMsg) GetScanningVariety() int64 {
	if x != nil {
		return x.ScanningVariety
	}
	return 0
}

func (x *ScannedMsg) GetSelected() bool {
	if x != nil {
		return x.Selected
	}
	return false
}

func (x *ScannedMsg) GetMainCaesura() int64 {
	if x != nil {
		return x.MainCaesura
	}
	return 0
}

func (x *ScannedMsg) GetCaesurae() []int64 {
	if x != nil {
		return x.Caesurae
	}
	return nil
}

func (x *ScannedMsg) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

type ArrScannedMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hexes []*ScannedMsg `protobuf:"bytes,1,rep,name=hexes,proto3" json:"hexes,omitempty"`
}

func (x *ArrScannedMsg) Reset() {
	*x = ArrScannedMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrScannedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrScannedMsg) ProtoMessage() {}

func (x *ArrScannedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrScannedMsg.ProtoReflect.Descriptor instead.
func (*ArrScannedMsg) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{7}
}

func (x *ArrScannedMsg) GetHexes() []*ScannedMsg {
	if x != nil {
		return x.Hexes
	}
	return nil
}

type HexIntMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HexID int64 `protobuf:"varint,1,opt,name=hexID,proto3" json:"hexID,omitempty"`
	X     int64 `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
}

func (x *HexIntMsg) Reset() {
	*x = HexIntMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HexIntMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HexIntMsg) ProtoMessage() {}

func (x *HexIntMsg) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HexIntMsg.ProtoReflect.Descriptor instead.
func (*HexIntMsg) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{8}
}

func (x *HexIntMsg) GetHexID() int64 {
	if x != nil {
		return x.HexID
	}
	return 0
}

func (x *HexIntMsg) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

var File_scanner_scanner_proto protoreflect.FileDescriptor

var file_scanner_scanner_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a,
	0x08, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x22, 0x44, 0x0a, 0x06, 0x48, 0x65, 0x78, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x68,
	0x65, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x65, 0x78, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x70, 0x61, 0x72, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x78, 0x74, 0x22, 0x32, 0x0a, 0x09, 0x41, 0x72, 0x72, 0x48, 0x65,
	0x78, 0x4d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x05, 0x68, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x48, 0x65,
	0x78, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x68, 0x65, 0x78, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x0a, 0x48,
	0x65, 0x78, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x65, 0x78,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x65, 0x78, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x22, 0x2b, 0x0a,
	0x07, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x78, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x41,
	0x72, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x73,
	0x67, 0x12, 0x26, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x4d,
	0x73, 0x67, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x68, 0x65, 0x78,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x2e, 0x48, 0x65, 0x78, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x68, 0x65, 0x78, 0x65, 0x73,
	0x12, 0x2f, 0x0a, 0x08, 0x68, 0x65, 0x78, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x78,
	0x57, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x68, 0x65, 0x78, 0x57, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0xc8, 0x02, 0x0a, 0x0a, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x73, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x68, 0x65, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x68, 0x65, 0x78, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x72, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x72, 0x69, 0x65, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x63, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x69, 0x65, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x61, 0x65, 0x73, 0x75, 0x72, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x61, 0x65, 0x73, 0x75, 0x72, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x65, 0x73, 0x75, 0x72, 0x61, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61,
	0x65, 0x73, 0x75, 0x72, 0x61, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x0d,
	0x41, 0x72, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x29, 0x0a,
	0x05, 0x68, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x05, 0x68, 0x65, 0x78, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x09, 0x48, 0x65, 0x78, 0x49,
	0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x65, 0x78, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x65, 0x78, 0x49, 0x44, 0x12, 0x0c, 0x0a, 0x01, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x32, 0xb8, 0x02, 0x0a, 0x07, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x48, 0x65, 0x78, 0x65, 0x73, 0x12, 0x11,
	0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x73,
	0x67, 0x1a, 0x12, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x72, 0x72, 0x48,
	0x65, 0x78, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1b, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x72, 0x72, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x07, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x73, 0x63, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x72, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x65, 0x74, 0x79, 0x12, 0x12, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x48, 0x65, 0x78, 0x49, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x43,
	0x61, 0x65, 0x73, 0x75, 0x72, 0x61, 0x12, 0x12, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x48, 0x65, 0x78, 0x49, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x54, 0x6f, 0x6d, 0x61, 0x73, 0x43, 0x72, 0x75, 0x7a, 0x2f, 0x68, 0x65, 0x78,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scanner_scanner_proto_rawDescOnce sync.Once
	file_scanner_scanner_proto_rawDescData = file_scanner_scanner_proto_rawDesc
)

func file_scanner_scanner_proto_rawDescGZIP() []byte {
	file_scanner_scanner_proto_rawDescOnce.Do(func() {
		file_scanner_scanner_proto_rawDescData = protoimpl.X.CompressGZIP(file_scanner_scanner_proto_rawDescData)
	})
	return file_scanner_scanner_proto_rawDescData
}

var file_scanner_scanner_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_scanner_scanner_proto_goTypes = []interface{}{
	(*RangeMsg)(nil),           // 0: scanner.RangeMsg
	(*HexMsg)(nil),             // 1: scanner.HexMsg
	(*ArrHexMsg)(nil),          // 2: scanner.ArrHexMsg
	(*HexWordMsg)(nil),         // 3: scanner.HexWordMsg
	(*WordMsg)(nil),            // 4: scanner.WordMsg
	(*ArrTranslatableMsg)(nil), // 5: scanner.ArrTranslatableMsg
	(*ScannedMsg)(nil),         // 6: scanner.ScannedMsg
	(*ArrScannedMsg)(nil),      // 7: scanner.ArrScannedMsg
	(*HexIntMsg)(nil),          // 8: scanner.HexIntMsg
	(*empty.Empty)(nil),        // 9: google.protobuf.Empty
}
var file_scanner_scanner_proto_depIdxs = []int32{
	1,  // 0: scanner.ArrHexMsg.hexes:type_name -> scanner.HexMsg
	4,  // 1: scanner.ArrTranslatableMsg.words:type_name -> scanner.WordMsg
	1,  // 2: scanner.ArrTranslatableMsg.hexes:type_name -> scanner.HexMsg
	3,  // 3: scanner.ArrTranslatableMsg.hexWords:type_name -> scanner.HexWordMsg
	6,  // 4: scanner.ArrScannedMsg.hexes:type_name -> scanner.ScannedMsg
	0,  // 5: scanner.Scanner.Hexes:input_type -> scanner.RangeMsg
	9,  // 6: scanner.Scanner.Translatable:input_type -> google.protobuf.Empty
	0,  // 7: scanner.Scanner.Scanned:input_type -> scanner.RangeMsg
	8,  // 8: scanner.Scanner.ChooseVariety:input_type -> scanner.HexIntMsg
	8,  // 9: scanner.Scanner.ChooseCaesura:input_type -> scanner.HexIntMsg
	2,  // 10: scanner.Scanner.Hexes:output_type -> scanner.ArrHexMsg
	5,  // 11: scanner.Scanner.Translatable:output_type -> scanner.ArrTranslatableMsg
	7,  // 12: scanner.Scanner.Scanned:output_type -> scanner.ArrScannedMsg
	9,  // 13: scanner.Scanner.ChooseVariety:output_type -> google.protobuf.Empty
	9,  // 14: scanner.Scanner.ChooseCaesura:output_type -> google.protobuf.Empty
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_scanner_scanner_proto_init() }
func file_scanner_scanner_proto_init() {
	if File_scanner_scanner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scanner_scanner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HexMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrHexMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HexWordMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrTranslatableMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannedMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrScannedMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HexIntMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scanner_scanner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scanner_scanner_proto_goTypes,
		DependencyIndexes: file_scanner_scanner_proto_depIdxs,
		MessageInfos:      file_scanner_scanner_proto_msgTypes,
	}.Build()
	File_scanner_scanner_proto = out.File
	file_scanner_scanner_proto_rawDesc = nil
	file_scanner_scanner_proto_goTypes = nil
	file_scanner_scanner_proto_depIdxs = nil
}
